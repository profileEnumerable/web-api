// Decompiled with JetBrains decompiler
// Type: System.Data.Entity.ModelConfiguration.Configuration.ForeignKeyNavigationPropertyConfiguration
// Assembly: EntityFramework, Version=6.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089
// MVID: 000F5452-2AD1-45BF-987B-3043022F9799
// Assembly location: C:\Users\suckt\source\repos\Epam_Lab_Task\packages\EntityFramework.6.1.3\lib\net45\EntityFramework.dll

using System.ComponentModel;
using System.Data.Entity.ModelConfiguration.Configuration.Properties.Navigation;
using System.Data.Entity.Utilities;
using System.Diagnostics.CodeAnalysis;

namespace System.Data.Entity.ModelConfiguration.Configuration
{
  /// <summary>
  /// Configures a relationship that can only support foreign key properties that are not exposed in the object model.
  /// This configuration functionality is available via the Code First Fluent API, see <see cref="T:System.Data.Entity.DbModelBuilder" />.
  /// </summary>
  public class ForeignKeyNavigationPropertyConfiguration : CascadableNavigationPropertyConfiguration
  {
    internal ForeignKeyNavigationPropertyConfiguration(
      NavigationPropertyConfiguration navigationPropertyConfiguration)
      : base(navigationPropertyConfiguration)
    {
    }

    /// <summary>
    /// Configures the relationship to use foreign key property(s) that are not exposed in the object model.
    /// The column(s) and table can be customized by specifying a configuration action.
    /// If an empty configuration action is specified then column name(s) will be generated by convention.
    /// If foreign key properties are exposed in the object model then use the HasForeignKey method.
    /// Not all relationships support exposing foreign key properties in the object model.
    /// </summary>
    /// <param name="configurationAction"> Action that configures the foreign key column(s) and table. </param>
    /// <returns> A configuration object that can be used to further configure the relationship. </returns>
    public CascadableNavigationPropertyConfiguration Map(
      Action<ForeignKeyAssociationMappingConfiguration> configurationAction)
    {
      Check.NotNull<Action<ForeignKeyAssociationMappingConfiguration>>(configurationAction, nameof (configurationAction));
      this.NavigationPropertyConfiguration.Constraint = IndependentConstraintConfiguration.Instance;
      ForeignKeyAssociationMappingConfiguration mappingConfiguration = new ForeignKeyAssociationMappingConfiguration();
      configurationAction(mappingConfiguration);
      this.NavigationPropertyConfiguration.AssociationMappingConfiguration = (AssociationMappingConfiguration) mappingConfiguration;
      return (CascadableNavigationPropertyConfiguration) this;
    }

    /// <inheritdoc />
    [EditorBrowsable(EditorBrowsableState.Never)]
    public override string ToString()
    {
      return base.ToString();
    }

    /// <inheritdoc />
    [EditorBrowsable(EditorBrowsableState.Never)]
    public override bool Equals(object obj)
    {
      return base.Equals(obj);
    }

    /// <inheritdoc />
    [EditorBrowsable(EditorBrowsableState.Never)]
    public override int GetHashCode()
    {
      return base.GetHashCode();
    }

    /// <inheritdoc />
    [EditorBrowsable(EditorBrowsableState.Never)]
    [SuppressMessage("Microsoft.Design", "CA1024:UsePropertiesWhereAppropriate")]
    public new Type GetType()
    {
      return base.GetType();
    }
  }
}
